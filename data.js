// Constante pour faciliter la lecture
// const TRANSPARENT = -1;
const T = -1; // Alias court

// Définition des tuiles (patterns 16x16) - PAS DE TRANSPARENCE
const TILES = {
    0: [ // Sol vide avec texture
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,1,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ],
    1: [ // Mur en briques détaillé
        [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
        [3,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3],
        [3,2,1,1,1,1,2,3,2,1,1,1,1,1,2,3],
        [3,2,1,1,1,1,2,3,2,1,1,1,1,1,2,3],
        [3,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3],
        [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
        [3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,3],
        [3,2,1,1,1,1,1,2,3,2,1,1,1,1,2,3],
        [3,2,1,1,1,1,1,2,3,2,1,1,1,1,2,3],
        [3,2,2,2,2,2,2,2,3,2,2,2,2,2,2,3],
        [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
        [3,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3],
        [3,2,1,1,1,1,2,3,2,1,1,1,1,1,2,3],
        [3,2,1,1,1,1,2,3,2,1,1,1,1,1,2,3],
        [3,2,2,2,2,2,2,3,2,2,2,2,2,2,2,3],
        [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]
    ],
    2: [ // Herbe haute détaillée
        [0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0],
        [0,0,1,2,1,0,0,0,0,1,2,1,0,0,0,0],
        [0,1,2,2,2,1,0,0,1,2,2,2,1,0,0,0],
        [0,1,2,3,2,1,0,0,1,2,3,2,1,0,0,0],
        [0,0,1,2,1,0,0,0,0,1,2,1,0,0,0,0],
        [0,0,0,1,0,0,0,0,0,0,1,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,1,2,1,0],
        [0,0,0,0,0,1,0,0,0,0,0,1,2,2,2,1],
        [0,0,0,0,1,2,1,0,0,0,0,1,2,3,2,1],
        [0,0,0,1,2,2,2,1,0,0,0,0,1,2,1,0],
        [0,0,0,1,2,3,2,1,0,0,0,0,0,1,0,0],
        [0,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,1,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ],
    3: [ // Rocher avec ombrage
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0],
        [0,0,0,2,3,3,3,3,3,3,3,2,0,0,0,0],
        [0,0,2,3,3,2,2,2,2,2,3,3,2,0,0,0],
        [0,2,3,3,2,2,1,1,1,2,2,3,3,2,0,0],
        [0,2,3,2,2,1,1,1,1,1,2,2,3,2,0,0],
        [0,2,3,2,1,1,1,0,1,1,1,2,3,2,0,0],
        [0,2,3,2,1,1,0,0,0,1,1,2,3,2,0,0],
        [0,2,3,2,1,1,1,0,1,1,1,2,3,2,0,0],
        [0,2,3,2,2,1,1,1,1,1,2,2,3,2,0,0],
        [0,2,3,3,2,2,1,1,1,2,2,3,3,2,0,0],
        [0,0,2,3,3,2,2,2,2,2,3,3,2,0,0,0],
        [0,0,0,2,3,3,3,3,3,3,3,2,0,0,0,0],
        [0,0,0,0,2,2,2,2,2,2,2,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ],
    4: [ // Porte (téléporteur)
        [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3],
        [3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3],
        [3,2,0,0,0,0,0,0,0,0,0,0,0,0,2,3],
        [3,2,0,3,3,3,3,3,3,3,3,3,3,0,2,3],
        [3,2,0,3,2,2,2,2,2,2,2,2,3,0,2,3],
        [3,2,0,3,2,1,1,1,1,1,1,2,3,0,2,3],
        [3,2,0,3,2,1,0,0,0,0,1,2,3,0,2,3],
        [3,2,0,3,2,1,0,0,0,0,1,2,3,0,2,3],
        [3,2,0,3,2,1,0,0,0,0,1,2,3,0,2,3],
        [3,2,0,3,2,1,0,0,0,0,1,2,3,0,2,3],
        [3,2,0,3,2,1,1,1,1,1,1,2,3,0,2,3],
        [3,2,0,3,2,2,2,3,2,2,2,2,3,0,2,3],
        [3,2,0,3,3,3,3,2,3,3,3,3,3,0,2,3],
        [3,2,0,0,0,0,0,0,0,0,0,0,0,0,2,3],
        [3,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3],
        [3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3]
    ],
    5: [ // Coffre fermé
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0],
        [0,0,3,2,2,2,2,2,2,2,2,2,2,3,0,0],
        [0,3,2,2,1,1,1,1,1,1,1,1,2,2,3,0],
        [3,2,2,1,1,1,1,1,1,1,1,1,1,2,2,3],
        [3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3],
        [3,2,3,2,2,2,2,2,2,2,2,2,2,3,2,3],
        [3,2,3,2,2,2,3,3,3,3,2,2,2,3,2,3],
        [3,2,3,2,2,2,3,2,2,3,2,2,2,3,2,3],
        [3,2,3,2,2,2,3,3,3,3,2,2,2,3,2,3],
        [3,2,3,2,2,2,2,2,2,2,2,2,2,3,2,3],
        [3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3],
        [0,3,2,2,2,2,2,2,2,2,2,2,2,2,3,0],
        [0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0]
    ],
    6: [ // Coffre ouvert
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,0],
        [0,0,0,3,2,2,2,2,2,2,2,2,3,0,0,0],
        [0,0,3,2,2,1,1,1,1,1,1,2,2,3,0,0],
        [0,3,2,2,1,1,1,1,1,1,1,1,2,2,3,0],
        [0,3,2,1,1,1,1,1,1,1,1,1,1,2,3,0],
        [3,2,2,3,3,3,3,3,3,3,3,3,3,2,2,3],
        [3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3],
        [3,2,3,2,2,2,2,2,2,2,2,2,2,3,2,3],
        [3,2,3,2,2,2,3,3,3,3,2,2,2,3,2,3],
        [3,2,3,2,2,2,3,2,2,3,2,2,2,3,2,3],
        [3,2,3,2,2,2,3,3,3,3,2,2,2,3,2,3],
        [3,2,3,2,2,2,2,2,2,2,2,2,2,3,2,3],
        [3,2,3,3,3,3,3,3,3,3,3,3,3,3,2,3],
        [0,3,2,2,2,2,2,2,2,2,2,2,2,2,3,0],
        [0,0,3,3,3,3,3,3,3,3,3,3,3,3,0,0]
    ],
    7: [ // Bloc poussable
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0],
        [0,3,2,2,2,2,2,2,2,2,2,2,2,2,3,0],
        [0,3,2,3,3,3,3,3,3,3,3,3,3,2,3,0],
        [0,3,2,3,2,2,2,2,2,2,2,2,3,2,3,0],
        [0,3,2,3,2,1,1,1,1,1,1,2,3,2,3,0],
        [0,3,2,3,2,1,2,2,2,2,1,2,3,2,3,0],
        [0,3,2,3,2,1,2,3,3,2,1,2,3,2,3,0],
        [0,3,2,3,2,1,2,3,3,2,1,2,3,2,3,0],
        [0,3,2,3,2,1,2,2,2,2,1,2,3,2,3,0],
        [0,3,2,3,2,1,1,1,1,1,1,2,3,2,3,0],
        [0,3,2,3,2,2,2,2,2,2,2,2,3,2,3,0],
        [0,3,2,3,3,3,3,3,3,3,3,3,3,2,3,0],
        [0,3,2,2,2,2,2,2,2,2,2,2,2,2,3,0],
        [0,3,3,3,3,3,3,3,3,3,3,3,3,3,3,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ],
    8: [ // Interrupteur désactivé
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0],
        [0,0,0,0,3,2,2,2,2,2,2,3,0,0,0,0],
        [0,0,0,0,3,2,3,3,3,3,2,3,0,0,0,0],
        [0,0,0,0,3,2,3,2,2,3,2,3,0,0,0,0],
        [0,0,0,0,3,2,3,2,2,3,2,3,0,0,0,0],
        [0,0,0,0,3,2,3,2,2,3,2,3,0,0,0,0],
        [0,0,0,0,3,2,3,3,3,3,2,3,0,0,0,0],
        [0,0,0,0,3,2,2,2,2,2,2,3,0,0,0,0],
        [0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ],
    9: [ // Interrupteur activé
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0],
        [0,0,0,0,3,2,2,2,2,2,2,3,0,0,0,0],
        [0,0,0,0,3,2,1,1,1,1,2,3,0,0,0,0],
        [0,0,0,0,3,2,1,0,0,1,2,3,0,0,0,0],
        [0,0,0,0,3,2,1,0,0,1,2,3,0,0,0,0],
        [0,0,0,0,3,2,1,0,0,1,2,3,0,0,0,0],
        [0,0,0,0,3,2,1,1,1,1,2,3,0,0,0,0],
        [0,0,0,0,3,2,2,2,2,2,2,3,0,0,0,0],
        [0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ],
    10: [ // Plaque de pression
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0],
        [0,0,3,2,2,2,2,2,2,2,2,2,2,3,0,0],
        [0,0,3,2,2,2,2,2,2,2,2,2,2,3,0,0],
        [0,0,0,3,3,3,3,3,3,3,3,3,3,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],
        [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]
    ]
};

// Sprite simple du joueur pour compatibilité arrière
const PLAYER_SPRITE = [
    [0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0],
    [0,0,0,0,3,2,2,2,2,2,2,3,0,0,0,0],
    [0,0,0,3,2,2,1,1,1,1,2,2,3,0,0,0],
    [0,0,0,3,2,1,3,1,1,3,1,2,3,0,0,0],
    [0,0,0,3,2,1,1,1,1,1,1,2,3,0,0,0],
    [0,0,0,3,2,2,1,3,3,1,2,2,3,0,0,0],
    [0,0,0,0,3,2,2,2,2,2,2,3,0,0,0,0],
    [0,0,0,0,0,3,3,3,3,3,3,0,0,0,0,0],
    [0,0,0,0,3,3,2,2,2,2,3,3,0,0,0,0],
    [0,0,0,3,2,3,2,2,2,2,3,2,3,0,0,0],
    [0,0,3,2,2,3,3,3,3,3,3,2,2,3,0,0],
    [0,0,3,2,2,3,2,2,2,2,3,2,2,3,0,0],
    [0,0,0,3,3,3,2,2,2,2,3,3,3,0,0,0],
    [0,0,0,0,0,3,2,2,2,2,3,0,0,0,0,0],
    [0,0,0,0,3,3,3,0,0,3,3,3,0,0,0,0],
    [0,0,0,0,3,3,3,0,0,3,3,3,0,0,0,0]
];

// Sprites du joueur avec orientations (AVEC TRANSPARENCE)
// Sprites du joueur avec orientations (AVEC TRANSPARENCE)
const PLAYER_SPRITES = {
    down: [ // Orientation vers le bas (face)
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,3,2,2,1,1,1,1,2,2,3,T,T,T],
        [T,T,T,3,2,1,3,1,1,3,1,2,3,T,T,T],
        [T,T,T,3,2,1,1,1,1,1,1,2,3,T,T,T],
        [T,T,T,3,2,2,1,3,3,1,2,2,3,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
        [T,T,T,3,2,3,2,2,2,2,3,2,3,T,T,T],
        [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
        [T,T,3,2,2,3,2,2,2,2,3,2,2,3,T,T],
        [T,T,T,3,3,3,2,2,2,2,3,3,3,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T]
    ],
    up: [ // Orientation vers le haut (dos)
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
        [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
        [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
        [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
        [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
        [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
        [T,T,T,3,2,3,2,2,2,2,3,2,3,T,T,T],
        [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
        [T,T,3,2,2,3,2,2,2,2,3,2,2,3,T,T],
        [T,T,T,3,3,3,2,2,2,2,3,3,3,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T]
    ],
    left: [ // Orientation vers la gauche
        [T,T,T,T,T,T,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,T,3,2,2,1,1,1,2,2,3,T,T,T],
        [T,T,T,T,3,2,3,1,1,1,1,2,3,T,T,T],
        [T,T,T,T,3,2,1,1,1,1,1,2,3,T,T,T],
        [T,T,T,T,3,2,2,3,3,1,2,2,3,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,T,T,T,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,3,3,T,T,T,T],
        [T,T,T,3,2,2,3,3,3,3,3,2,3,T,T,T],
        [T,T,3,2,2,2,2,2,2,2,3,2,3,T,T,T],
        [T,T,T,3,3,3,2,2,2,2,3,3,T,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T]
    ],
    right: [ // Orientation vers la droite
        [T,T,T,T,T,3,3,3,3,3,T,T,T,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,3,T,T,T,T,T],
        [T,T,T,3,2,2,1,1,1,2,2,3,T,T,T,T],
        [T,T,T,3,2,1,1,1,1,3,2,3,T,T,T,T],
        [T,T,T,3,2,1,1,1,1,1,2,3,T,T,T,T],
        [T,T,T,3,2,2,1,3,3,2,2,3,T,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,3,T,T,T,T,T],
        [T,T,T,T,T,3,3,3,3,3,T,T,T,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
        [T,T,T,T,3,3,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,3,2,3,3,3,3,3,2,2,3,T,T,T],
        [T,T,T,3,2,3,2,2,2,2,2,2,3,T,T,T],
        [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
        [T,T,T,T,T,3,2,2,2,2,3,3,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T]
    ]
};

// Animation de marche pour chaque direction
const PLAYER_WALK_SPRITES = {
    down: [
        // Frame 1 - jambe gauche en avant
        [
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,3,2,2,1,1,1,1,2,2,3,T,T,T],
            [T,T,T,3,2,1,3,1,1,3,1,2,3,T,T,T],
            [T,T,T,3,2,1,1,1,1,1,1,2,3,T,T,T],
            [T,T,T,3,2,2,1,3,3,1,2,2,3,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,3,2,3,2,2,2,2,3,2,3,T,T,T],
            [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
            [T,T,3,2,2,3,2,2,2,2,3,2,2,3,T,T],
            [T,T,T,3,3,3,2,2,2,2,3,3,3,T,T,T],
            [T,T,T,T,3,3,2,T,T,2,2,3,T,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T]
        ],
        // Frame 2 - jambe droite en avant
        [
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,3,2,2,1,1,1,1,2,2,3,T,T,T],
            [T,T,T,3,2,1,3,1,1,3,1,2,3,T,T,T],
            [T,T,T,3,2,1,1,1,1,1,1,2,3,T,T,T],
            [T,T,T,3,2,2,1,3,3,1,2,2,3,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,3,2,3,2,2,2,2,3,2,3,T,T,T],
            [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
            [T,T,3,2,2,3,2,2,2,2,3,2,2,3,T,T],
            [T,T,T,3,3,3,2,2,2,2,3,3,3,T,T,T],
            [T,T,T,T,3,2,2,T,T,2,3,3,T,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T]
        ]
    ],
    up: [
        // Frame 1
        [
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,3,2,3,2,2,2,2,3,2,3,T,T,T],
            [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
            [T,T,3,2,2,3,2,2,2,2,3,2,2,3,T,T],
            [T,T,T,3,3,3,2,2,2,2,3,3,3,T,T,T],
            [T,T,T,T,3,3,2,T,T,2,2,3,T,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T]
        ],
        // Frame 2
        [
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
            [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
            [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,3,2,3,2,2,2,2,3,2,3,T,T,T],
            [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
            [T,T,3,2,2,3,2,2,2,2,3,2,2,3,T,T],
            [T,T,T,3,3,3,2,2,2,2,3,3,3,T,T,T],
            [T,T,T,T,3,2,2,T,T,2,3,3,T,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T],
            [T,T,T,3,3,3,T,T,T,T,3,3,3,T,T,T]
        ]
    ],
    left: [
        // Frame 1
        [
            [T,T,T,T,T,T,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,T,3,2,2,1,1,1,2,2,3,T,T,T],
            [T,T,T,T,3,2,3,1,1,1,1,2,3,T,T,T],
            [T,T,T,T,3,2,1,1,1,1,1,2,3,T,T,T],
            [T,T,T,T,3,2,2,3,3,1,2,2,3,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,T,T,T,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,3,2,2,3,3,3,3,3,2,3,T,T,T],
            [T,T,3,2,2,2,2,2,2,2,3,2,3,T,T,T],
            [T,T,T,3,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,3,3,3,T,T,T,T,T,T,T,T,T],
            [T,T,T,T,3,3,T,T,T,T,T,T,T,T,T,T]
        ],
        // Frame 2
        [
            [T,T,T,T,T,T,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,T,3,2,2,1,1,1,2,2,3,T,T,T],
            [T,T,T,T,3,2,3,1,1,1,1,2,3,T,T,T],
            [T,T,T,T,3,2,1,1,1,1,1,2,3,T,T,T],
            [T,T,T,T,3,2,2,3,3,1,2,2,3,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,T,T,T,3,3,3,3,3,T,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,3,2,2,3,3,3,3,3,2,3,T,T,T],
            [T,T,T,3,2,2,2,2,2,2,3,2,3,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,T,T,T,T,3,3,3,T,T,T,T,T],
            [T,T,T,T,T,T,T,T,3,3,T,T,T,T,T,T]
        ]
    ],
    right: [
        // Frame 1
        [
            [T,T,T,T,T,3,3,3,3,3,T,T,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,3,2,2,1,1,1,2,2,3,T,T,T,T],
            [T,T,T,3,2,1,1,1,1,3,2,3,T,T,T,T],
            [T,T,T,3,2,1,1,1,1,1,2,3,T,T,T,T],
            [T,T,T,3,2,2,1,3,3,2,2,3,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,T,3,3,3,3,3,T,T,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,3,2,3,3,3,3,3,2,2,3,T,T,T],
            [T,T,T,3,2,3,2,2,2,2,2,2,3,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,T,T,T,T,T,3,3,3,T,T,T,T,T],
            [T,T,T,T,T,T,T,T,T,3,3,T,T,T,T,T]
        ],
        // Frame 2
        [
            [T,T,T,T,T,3,3,3,3,3,T,T,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,3,2,2,1,1,1,2,2,3,T,T,T,T],
            [T,T,T,3,2,1,1,1,1,3,2,3,T,T,T,T],
            [T,T,T,3,2,1,1,1,1,1,2,3,T,T,T,T],
            [T,T,T,3,2,2,1,3,3,2,2,3,T,T,T,T],
            [T,T,T,T,3,2,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,T,3,3,3,3,3,T,T,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,3,3,2,2,2,2,2,3,T,T,T,T],
            [T,T,T,3,2,3,3,3,3,3,2,2,3,T,T,T],
            [T,T,T,3,2,3,2,2,2,2,2,2,2,3,T,T],
            [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
            [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
            [T,T,T,T,T,T,T,T,3,3,3,T,T,T,T,T],
            [T,T,T,T,T,T,T,T,T,T,3,3,T,T,T,T]
        ]
    ]
};

// Sprites des PNJ (AVEC TRANSPARENCE)
const NPC_SPRITES = {
    // Vieil homme (immobile)
    oldMan: [
        [T,T,T,T,T,2,2,2,2,2,2,T,T,T,T,T],
        [T,T,T,T,2,1,1,1,1,1,1,2,T,T,T,T],
        [T,T,T,2,1,1,2,1,1,2,1,1,2,T,T,T],
        [T,T,T,2,1,3,3,1,1,3,3,1,2,T,T,T],
        [T,T,T,2,1,1,1,1,1,1,1,1,2,T,T,T],
        [T,T,T,2,1,1,1,3,3,1,1,1,2,T,T,T],
        [T,T,T,T,2,1,1,1,1,1,1,2,T,T,T,T],
        [T,T,T,T,T,2,2,2,2,2,2,T,T,T,T,T],
        [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
        [T,T,T,3,2,3,3,3,3,3,3,2,3,T,T,T],
        [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
        [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
        [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T]
    ],
    // Marchand
    merchant: [
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,3,2,1,1,1,1,1,1,2,3,T,T,T],
        [T,T,T,3,2,1,3,1,1,3,1,2,3,T,T,T],
        [T,T,T,3,2,1,1,1,1,1,1,2,3,T,T,T],
        [T,T,T,3,2,2,3,3,3,3,2,2,3,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,2,2,2,2,2,2,2,2,T,T,T,T],
        [T,T,T,2,1,2,2,2,2,2,2,1,2,T,T,T],
        [T,T,2,1,1,2,1,1,1,1,2,1,1,2,T,T],
        [T,T,2,1,1,2,1,1,1,1,2,1,1,2,T,T],
        [T,T,T,2,2,2,1,1,1,1,2,2,2,T,T,T],
        [T,T,T,T,T,2,1,1,1,1,2,T,T,T,T,T],
        [T,T,T,T,2,2,2,T,T,2,2,2,T,T,T,T],
        [T,T,T,T,2,2,2,T,T,2,2,2,T,T,T,T]
    ],
    // Chat (mobile)
    cat: [
        [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
        [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
        [T,T,3,3,T,T,T,T,T,T,T,3,3,T,T,T],
        [T,T,3,2,3,T,T,T,T,T,3,2,3,T,T,T],
        [T,T,3,2,2,3,3,3,3,3,2,2,3,T,T,T],
        [T,T,T,3,2,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,3,2,3,2,2,2,3,2,3,T,T,T,T],
        [T,T,T,3,2,2,2,3,2,2,2,3,T,T,T,T],
        [T,T,T,3,2,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,3,2,2,2,2,2,2,2,2,2,3,T,T,T],
        [T,3,2,2,3,3,3,3,3,3,3,2,2,3,T,T],
        [T,3,2,2,3,T,T,T,T,T,3,2,2,3,T,T],
        [T,T,3,3,T,T,T,T,T,T,T,3,3,T,T,T],
        [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
        [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
        [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T]
    ],
    // Garde (immobile)
    guard: [
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,3,2,2,2,2,2,2,2,2,3,T,T,T],
        [T,T,T,3,2,1,3,1,1,3,1,2,3,T,T,T],
        [T,T,T,3,2,1,1,1,1,1,1,2,3,T,T,T],
        [T,T,T,3,2,2,1,3,3,1,2,2,3,T,T,T],
        [T,T,T,T,3,2,2,2,2,2,2,3,T,T,T,T],
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
        [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
        [T,T,3,3,3,3,3,3,3,3,3,3,3,3,T,T],
        [T,T,3,3,3,3,3,3,3,3,3,3,3,3,T,T],
        [T,T,T,3,3,3,3,3,3,3,3,3,3,T,T,T],
        [T,T,T,T,T,3,3,3,3,3,3,T,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T],
        [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T]
            ],
            // Oiseau (mobile)
            
bird: [
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,T,3,3,3,T,T,T,T,T,T,T],
    [T,T,T,T,T,3,2,2,2,3,T,T,T,T,T,T],
    [T,3,3,T,3,2,1,3,1,2,3,T,T,3,3,T],
    [3,2,2,3,3,2,2,2,2,2,3,3,3,2,2,3],
    [T,3,2,2,3,3,2,2,2,3,3,2,2,2,3,T],
    [T,T,3,2,2,3,3,3,3,3,2,2,2,3,T,T],
    [T,T,T,3,2,2,2,2,2,2,2,2,3,T,T,T],
    [T,T,T,T,3,3,3,3,3,3,3,3,T,T,T,T],
    [T,T,T,T,T,1,T,T,T,T,1,T,T,T,T,T],
    [T,T,T,T,T,1,T,T,T,T,1,T,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T]
],

slime: [
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T],
    [T,T,T,T,T,2,2,2,2,2,2,T,T,T,T,T],
    [T,T,T,T,2,2,2,2,2,2,2,2,T,T,T,T],
    [T,T,T,2,2,2,2,2,2,2,2,2,2,T,T,T],
    [T,T,2,2,1,3,2,2,2,2,3,1,2,2,T,T],
    [T,T,2,2,3,3,2,2,2,2,3,3,2,2,T,T],
    [T,2,2,2,2,2,2,3,3,2,2,2,2,2,2,T],
    [T,2,2,2,2,2,2,2,2,2,2,2,2,2,2,T],
    [T,2,2,2,2,2,2,2,2,2,2,2,2,2,2,T],
    [T,2,2,2,2,2,2,2,2,2,2,2,2,2,2,T],
    [T,T,2,2,2,2,2,2,2,2,2,2,2,2,T,T],
    [T,T,T,2,2,2,2,2,2,2,2,2,2,T,T,T],
    [T,T,T,T,2,2,2,2,2,2,2,2,T,T,T,T],
    [T,T,T,T,T,T,T,T,T,T,T,T,T,T,T,T]
],

goblin: [
    [T,T,T,T,T,2,2,2,2,2,2,T,T,T,T,T],
    [T,T,T,T,2,2,2,2,2,2,2,2,T,T,T,T],
    [T,T,T,2,2,2,2,2,2,2,2,2,2,T,T,T],
    [T,T,2,2,2,3,1,2,2,1,3,2,2,2,T,T],
    [T,T,2,2,2,1,3,2,2,3,1,2,2,2,T,T],
    [T,T,2,2,2,2,2,3,3,2,2,2,2,2,T,T],
    [T,T,T,2,2,2,3,3,3,3,2,2,2,T,T,T],
    [T,T,T,T,2,2,2,2,2,2,2,2,T,T,T,T],
    [T,T,T,T,3,3,2,2,2,2,3,3,T,T,T,T],
    [T,T,T,3,2,3,2,2,2,2,3,2,3,T,T,T],
    [T,T,3,2,2,3,3,3,3,3,3,2,2,3,T,T],
    [T,T,3,2,2,3,2,2,2,2,3,2,2,3,T,T],
    [T,T,T,3,3,3,2,2,2,2,3,3,3,T,T,T],
    [T,T,T,T,T,3,2,2,2,2,3,T,T,T,T,T],
    [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T],
    [T,T,T,T,3,3,3,T,T,3,3,3,T,T,T,T]
]
        };
        
        // SystÃ¨me de cartes multiples
        let customMaps = {}; // Cartes chargÃ©es par l'utilisateur
        
        const defaultMaps = {
            0: { // Carte extÃ©rieure principale
                name: "Plaine",
                tiles: [
                    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                    [1,2,2,2,2,2,2,2,2,2,2,2,1,2,2,2,2,2,2,2,2,2,2,2,1],
                    [1,2,0,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,2,1],
                    [1,2,0,3,0,0,0,0,3,0,0,2,4,2,0,0,3,0,0,0,3,0,0,2,1],
                    [1,2,0,0,0,0,0,0,0,0,0,2,1,2,0,0,0,0,0,0,0,0,0,2,1],
                    [1,2,0,0,0,1,1,1,0,0,0,2,2,2,0,0,0,1,1,1,0,0,0,2,1],
                    [1,2,0,0,0,1,2,1,0,0,0,0,0,0,0,0,0,1,2,1,0,0,0,2,1],
                    [1,2,0,0,0,1,1,1,0,0,0,0,5,0,0,0,0,1,1,1,0,0,0,2,1],
                    [1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
                    [1,2,2,2,2,2,2,2,2,2,0,0,0,0,0,2,2,2,2,2,2,2,2,2,1],
                    [1,1,1,1,1,1,1,1,1,2,0,0,0,0,0,2,1,1,1,1,1,1,1,1,1],
                    [1,2,2,2,2,2,2,2,2,2,0,0,0,0,0,2,2,2,2,2,2,2,2,2,1],
                    [1,2,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,1],
                    [1,2,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,2,1],
                    [1,2,0,0,0,0,0,1,4,1,1,1,1,1,1,1,4,1,0,0,0,0,0,2,1],
                    [1,2,0,0,0,0,0,1,2,2,2,2,2,2,2,2,2,1,0,0,0,0,0,2,1],
                    [1,2,0,5,0,0,0,1,2,0,0,0,0,0,0,0,2,1,0,0,0,5,0,2,1],
                    [1,2,0,0,3,0,0,1,2,0,0,3,0,3,0,0,2,1,0,0,3,0,0,2,1],
                    [1,2,2,2,2,2,2,1,2,2,2,2,4,2,2,2,2,1,2,2,2,2,2,2,1],
                    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
                ],
                doors: {
                    "12,3": { targetMap: 1, targetX: 5, targetY: 8 },  // Porte nord
                    "8,14": { targetMap: 2, targetX: 5, targetY: 2 },  // Porte ouest
                    "16,14": { targetMap: 3, targetX: 5, targetY: 2 }, // Porte est
                    "12,18": { targetMap: 4, targetX: 5, targetY: 2 }  // Porte sud
                },
                npcs: [
                    { type: 'oldMan', x: 5, y: 6, mobile: false },
                    { type: 'merchant', x: 12, y: 8, mobile: false, merchant: true },
                    { type: 'cat', x: 15, y: 8, mobile: true },
                    { type: 'bird', x: 10, y: 12, mobile: true },
                    { type: 'guard', x: 12, y: 5, mobile: false },
                    // Moins d'ennemis
                    { type: 'slime', x: 14, y: 10, mobile: true, enemy: true },
                    { type: 'goblin', x: 8, y: 12, mobile: true, enemy: true }
                ]
            },
            1: { // Maison nord
                name: "Maison Nord",
                tiles: [
                    [1,1,1,1,1,1,1,1,1,1,1],
                    [1,0,0,0,0,0,0,0,0,0,1],
                    [1,0,0,0,0,0,0,0,0,0,1],
                    [1,0,0,3,0,0,0,3,0,0,1],
                    [1,0,0,0,0,0,0,0,0,0,1],
                    [1,0,0,0,0,5,0,0,0,0,1],
                    [1,0,0,0,0,0,0,0,0,0,1],
                    [1,0,0,0,0,0,0,0,0,0,1],
                    [1,1,1,1,1,4,1,1,1,1,1]
                ],
                doors: {
                    "5,8": { targetMap: 0, targetX: 12, targetY: 4 }
                },
                npcs: [
                    { type: 'oldMan', x: 5, y: 4, mobile: false },
                    { type: 'slime', x: 3, y: 6, mobile: true, enemy: true }
                ]
            },
            2: { // Grotte ouest
                name: "Grotte Ouest",
                tiles: [
                    [1,1,1,1,1,1,1,1,1,1,1],
                    [1,2,2,2,2,2,2,2,2,2,1],
                    [1,2,0,0,0,4,0,0,0,2,1],
                    [1,2,0,3,0,0,0,3,0,2,1],
                    [1,2,0,0,0,0,0,0,0,2,1],
                    [1,2,0,0,3,0,3,0,0,2,1],
                    [1,2,0,0,0,0,0,0,0,2,1],
                    [1,2,2,2,2,2,2,2,2,2,1],
                    [1,1,1,1,1,1,1,1,1,1,1]
                ],
                doors: {
                    "5,2": { targetMap: 0, targetX: 8, targetY: 15 }
                },
                npcs: [
                    { type: 'cat', x: 3, y: 5, mobile: true },
                    { type: 'cat', x: 7, y: 5, mobile: true },
                    { type: 'slime', x: 5, y: 3, mobile: true, enemy: true }
                ]
            },
            3: { // Temple est - avec Ã©nigme
                name: "Temple Est",
                tiles: [
                    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],
                    [1,0,0,0,0,0,0,4,0,0,0,0,0,0,1],
                    [1,0,1,1,1,1,1,1,1,1,1,1,1,0,1],
                    [1,0,1,7,0,0,0,0,0,0,0,7,1,0,1],
                    [1,0,1,0,0,8,0,0,0,8,0,0,1,0,1],
                    [1,0,1,0,0,0,0,5,0,0,0,0,1,0,1],
                    [1,0,1,0,0,8,0,0,0,8,0,0,1,0,1],
                    [1,0,1,10,0,0,0,0,0,0,0,10,1,0,1],
                    [1,0,1,1,1,1,1,0,1,1,1,1,1,0,1],
                    [1,0,0,0,0,0,0,0,0,0,0,0,0,0,1],
                    [1,1,1,1,1,1,1,1,1,1,1,1,1,1,1]
                ],
                doors: {
                    "7,1": { targetMap: 0, targetX: 16, targetY: 15 }
                },
                npcs: [
                    { type: 'oldMan', x: 7, y: 9, mobile: false }
                ],
                puzzle: {
                    type: 'switches',
                    switches: [
                        { x: 5, y: 4, id: 'A' },
                        { x: 9, y: 4, id: 'B' },
                        { x: 5, y: 6, id: 'C' },
                        { x: 9, y: 6, id: 'D' }
                    ],
                    sequence: ['A', 'C', 'B', 'D'], // Ordre correct
                    reward: { x: 7, y: 8 }, // Position oÃ¹ apparaÃ®t la rÃ©compense
                    blocks: [
                        { x: 3, y: 3 },
                        { x: 11, y: 3 }
                    ],
                    plates: [
                        { x: 3, y: 7 },
                        { x: 11, y: 7 }
                    ]
                }
            },
            4: { // Jardin sud
                name: "Jardin Sud",
                tiles: [
                    [1,1,1,1,1,1,1,1,1,1,1],
                    [1,2,2,2,2,2,2,2,2,2,1],
                    [1,2,0,0,0,4,0,0,0,2,1],
                    [1,2,0,2,2,2,2,2,0,2,1],
                    [1,2,0,2,0,0,0,2,0,2,1],
                    [1,2,0,2,0,3,0,2,0,2,1],
                    [1,2,0,2,2,0,2,2,0,2,1],
                    [1,2,0,0,0,0,0,0,0,2,1],
                    [1,2,2,2,2,2,2,2,2,2,1],
                    [1,1,1,1,1,1,1,1,1,1,1]
                ],
                doors: {
                    "5,2": { targetMap: 0, targetX: 12, targetY: 17 }
                },
                npcs: [
                    { type: 'bird', x: 3, y: 6, mobile: true },
                    { type: 'bird', x: 7, y: 3, mobile: true }
                ]
            }
        };
        